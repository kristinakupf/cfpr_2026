Beginning AutoGluon training... Time limit = 100s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.65 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': ['Geopolitical_clean',
                            'Climate',
                            'Manufacturing',
                            'Economic'],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 100,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:
	target: 'target'
	known_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 08:09:07
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 33.3s of the 100.0s of remaining time.
	-0.0224       = Validation score (-MAPE)
	30.37   s     = Training runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 34.8s of the 69.5s of remaining time.
	-0.0286       = Validation score (-MAPE)
	31.53   s     = Training runtime
	0.16    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0224       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.05    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 62.49 s
Best model: TemporalFusionTransformer
Best model score: -0.0224
Beginning AutoGluon training... Time limit = 100s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': ['Geopolitical_clean',
                            'Climate',
                            'Manufacturing',
                            'Economic'],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 100,
 'verbosity': 2}

Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 

Provided data contains following columns:
	target: 'target'
	known_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 08:10:10
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 33.3s of the 100.0s of remaining time.
	-0.0214       = Validation score (-MAPE)
	30.35   s     = Training runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 34.8s of the 69.5s of remaining time.
	-0.0216       = Validation score (-MAPE)
	31.58   s     = Training runtime
	0.18    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 0.49, 'TemporalFusionTransformer': 0.51}
	-0.0192       = Validation score (-MAPE)
	0.34    s     = Training runtime
	0.23    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 62.56 s
Best model: WeightedEnsemble
Best model score: -0.0192
Beginning AutoGluon training... Time limit = 100s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': ['Geopolitical_clean',
                            'Climate',
                            'Manufacturing',
                            'Economic'],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 100,
 'verbosity': 2}

Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 

Provided data contains following columns:
	target: 'target'
	known_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 08:11:13
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 33.3s of the 100.0s of remaining time.
	-0.0454       = Validation score (-MAPE)
	30.33   s     = Training runtime
	0.06    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 34.8s of the 69.6s of remaining time.
	-0.0423       = Validation score (-MAPE)
	31.59   s     = Training runtime
	0.15    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 0.88, 'TemporalFusionTransformer': 0.12}
	-0.0422       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.21    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 62.52 s
Best model: WeightedEnsemble
Best model score: -0.0422
Beginning AutoGluon training... Time limit = 100s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': ['Geopolitical_clean',
                            'Climate',
                            'Manufacturing',
                            'Economic'],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 100,
 'verbosity': 2}

Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 

Provided data contains following columns:
	target: 'target'
	known_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 08:12:15
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 33.3s of the 100.0s of remaining time.
	-0.0603       = Validation score (-MAPE)
	30.38   s     = Training runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 34.8s of the 69.5s of remaining time.
	-0.0902       = Validation score (-MAPE)
	31.55   s     = Training runtime
	0.15    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0603       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.05    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 62.50 s
Best model: TemporalFusionTransformer
Best model score: -0.0603
Beginning AutoGluon training... Time limit = 100s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': ['Geopolitical_clean',
                            'Climate',
                            'Manufacturing',
                            'Economic'],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 100,
 'verbosity': 2}

Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 

Provided data contains following columns:
	target: 'target'
	known_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 08:13:18
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 33.3s of the 100.0s of remaining time.
	-0.0220       = Validation score (-MAPE)
	30.30   s     = Training runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 34.8s of the 69.6s of remaining time.
	-0.0767       = Validation score (-MAPE)
	31.54   s     = Training runtime
	0.15    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0220       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.05    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 62.43 s
Best model: TemporalFusionTransformer
Best model score: -0.0220
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Beginning AutoGluon training... Time limit = 100s
Beginning AutoGluon training... Time limit = 100s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.53 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.53 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': ['Geopolitical_clean',
                            'Climate',
                            'Manufacturing',
                            'Economic'],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 100,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': ['Geopolitical_clean',
                            'Climate',
                            'Manufacturing',
                            'Economic'],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 100,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	known_covariates:
	known_covariates:
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:15:44

Starting training. Start time is 2025-10-23 08:15:44
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 33.3s of the 100.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 33.3s of the 100.0s of remaining time.
	-0.0224       = Validation score (-MAPE)
	-0.0224       = Validation score (-MAPE)
	30.34   s     = Training runtime
	30.34   s     = Training runtime
	0.06    s     = Validation (prediction) runtime
	0.06    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 34.8s of the 69.5s of remaining time.
Training timeseries model DeepAR. Training for up to 34.8s of the 69.5s of remaining time.
	-0.0283       = Validation score (-MAPE)
	-0.0283       = Validation score (-MAPE)
	31.57   s     = Training runtime
	31.57   s     = Training runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0224       = Validation score (-MAPE)
	-0.0224       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.06    s     = Validation (prediction) runtime
	0.06    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 62.50 s
Total runtime: 62.50 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0224
Best model score: -0.0224
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Beginning AutoGluon training... Time limit = 100s
Beginning AutoGluon training... Time limit = 100s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.52 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.52 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': ['Geopolitical_clean',
                            'Climate',
                            'Manufacturing',
                            'Economic'],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 100,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': ['Geopolitical_clean',
                            'Climate',
                            'Manufacturing',
                            'Economic'],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 100,
 'verbosity': 2}

Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	known_covariates:
	known_covariates:
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:16:47

Starting training. Start time is 2025-10-23 08:16:47
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 33.3s of the 100.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 33.3s of the 100.0s of remaining time.
	-0.0214       = Validation score (-MAPE)
	-0.0214       = Validation score (-MAPE)
	30.32   s     = Training runtime
	30.32   s     = Training runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 34.8s of the 69.6s of remaining time.
Training timeseries model DeepAR. Training for up to 34.8s of the 69.6s of remaining time.
	-0.0212       = Validation score (-MAPE)
	-0.0212       = Validation score (-MAPE)
	31.56   s     = Training runtime
	31.56   s     = Training runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 0.54, 'TemporalFusionTransformer': 0.46}
	Ensemble weights: {'DeepAR': 0.54, 'TemporalFusionTransformer': 0.46}
	-0.0192       = Validation score (-MAPE)
	-0.0192       = Validation score (-MAPE)
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.20    s     = Validation (prediction) runtime
	0.20    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 62.48 s
Total runtime: 62.48 s
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model score: -0.0192
Best model score: -0.0192
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Beginning AutoGluon training... Time limit = 100s
Beginning AutoGluon training... Time limit = 100s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.51 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.51 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': ['Geopolitical_clean',
                            'Climate',
                            'Manufacturing',
                            'Economic'],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 100,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': ['Geopolitical_clean',
                            'Climate',
                            'Manufacturing',
                            'Economic'],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 100,
 'verbosity': 2}

Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	known_covariates:
	known_covariates:
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:17:49

Starting training. Start time is 2025-10-23 08:17:49
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 33.3s of the 100.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 33.3s of the 100.0s of remaining time.
	-0.0454       = Validation score (-MAPE)
	-0.0454       = Validation score (-MAPE)
	30.38   s     = Training runtime
	30.38   s     = Training runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 34.8s of the 69.5s of remaining time.
Training timeseries model DeepAR. Training for up to 34.8s of the 69.5s of remaining time.
	-0.0422       = Validation score (-MAPE)
	-0.0422       = Validation score (-MAPE)
	31.52   s     = Training runtime
	31.52   s     = Training runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 0.88, 'TemporalFusionTransformer': 0.12}
	Ensemble weights: {'DeepAR': 0.88, 'TemporalFusionTransformer': 0.12}
	-0.0421       = Validation score (-MAPE)
	-0.0421       = Validation score (-MAPE)
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.20    s     = Validation (prediction) runtime
	0.20    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 62.51 s
Total runtime: 62.51 s
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model score: -0.0421
Best model score: -0.0421
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Beginning AutoGluon training... Time limit = 100s
Beginning AutoGluon training... Time limit = 100s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.52 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.52 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': ['Geopolitical_clean',
                            'Climate',
                            'Manufacturing',
                            'Economic'],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 100,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': ['Geopolitical_clean',
                            'Climate',
                            'Manufacturing',
                            'Economic'],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 100,
 'verbosity': 2}

Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	known_covariates:
	known_covariates:
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:18:52

Starting training. Start time is 2025-10-23 08:18:52
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 33.3s of the 100.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 33.3s of the 100.0s of remaining time.
	-0.0655       = Validation score (-MAPE)
	-0.0655       = Validation score (-MAPE)
	30.30   s     = Training runtime
	30.30   s     = Training runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 34.8s of the 69.6s of remaining time.
Training timeseries model DeepAR. Training for up to 34.8s of the 69.6s of remaining time.
Beginning AutoGluon training... Time limit = 100s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       114.05 GB / 125.17 GB (91.1%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 100,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 08:21:13
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 32.8s of the 98.3s of remaining time.
	-0.0228       = Validation score (-MAPE)
	32.83   s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 32.7s of the 65.4s of remaining time.
	-0.0186       = Validation score (-MAPE)
	29.66   s     = Training runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	-0.0186       = Validation score (-MAPE)
	0.34    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 63.08 s
Best model: DeepAR
Best model score: -0.0186
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.70 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.70 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:24:07

Starting training. Start time is 2025-10-23 08:24:07
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	3.40    s     = Training runtime
	3.40    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 3.3s of the 6.5s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.5s of remaining time.
	-0.0354       = Validation score (-MAPE)
	-0.0354       = Validation score (-MAPE)
	3.12    s     = Training runtime
	3.12    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 7.07 s
Total runtime: 7.07 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0273
Best model score: -0.0273
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:25:49

Starting training. Start time is 2025-10-23 08:25:49

Starting training. Start time is 2025-10-23 08:25:49
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
	-0.0277       = Validation score (-MAPE)
	-0.0277       = Validation score (-MAPE)
	-0.0277       = Validation score (-MAPE)
	3.32    s     = Training runtime
	3.32    s     = Training runtime
	3.32    s     = Training runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
	-0.0398       = Validation score (-MAPE)
	-0.0398       = Validation score (-MAPE)
	-0.0398       = Validation score (-MAPE)
	3.19    s     = Training runtime
	3.19    s     = Training runtime
	3.19    s     = Training runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0277       = Validation score (-MAPE)
	-0.0277       = Validation score (-MAPE)
	-0.0277       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 7.10 s
Total runtime: 7.10 s
Total runtime: 7.10 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0277
Best model score: -0.0277
Best model score: -0.0277
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.69 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.69 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.69 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.69 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:28:28

Starting training. Start time is 2025-10-23 08:28:28

Starting training. Start time is 2025-10-23 08:28:28

Starting training. Start time is 2025-10-23 08:28:28
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	3.60    s     = Training runtime
	3.60    s     = Training runtime
	3.60    s     = Training runtime
	3.60    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 3.2s of the 6.3s of remaining time.
Training timeseries model DeepAR. Training for up to 3.2s of the 6.3s of remaining time.
Training timeseries model DeepAR. Training for up to 3.2s of the 6.3s of remaining time.
Training timeseries model DeepAR. Training for up to 3.2s of the 6.3s of remaining time.
	-0.0313       = Validation score (-MAPE)
	-0.0313       = Validation score (-MAPE)
	-0.0313       = Validation score (-MAPE)
	-0.0313       = Validation score (-MAPE)
	3.03    s     = Training runtime
	3.03    s     = Training runtime
	3.03    s     = Training runtime
	3.03    s     = Training runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 7.22 s
Total runtime: 7.22 s
Total runtime: 7.22 s
Total runtime: 7.22 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0273
Best model score: -0.0273
Best model score: -0.0273
Best model score: -0.0273
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.65 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.65 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.65 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.65 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.65 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:30:07

Starting training. Start time is 2025-10-23 08:30:07

Starting training. Start time is 2025-10-23 08:30:07

Starting training. Start time is 2025-10-23 08:30:07

Starting training. Start time is 2025-10-23 08:30:07
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	3.34    s     = Training runtime
	3.34    s     = Training runtime
	3.34    s     = Training runtime
	3.34    s     = Training runtime
	3.34    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
	-0.0281       = Validation score (-MAPE)
	-0.0281       = Validation score (-MAPE)
	-0.0281       = Validation score (-MAPE)
	-0.0281       = Validation score (-MAPE)
	-0.0281       = Validation score (-MAPE)
	3.14    s     = Training runtime
	3.14    s     = Training runtime
	3.14    s     = Training runtime
	3.14    s     = Training runtime
	3.14    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 0.51, 'TemporalFusionTransformer': 0.49}
	Ensemble weights: {'DeepAR': 0.51, 'TemporalFusionTransformer': 0.49}
	Ensemble weights: {'DeepAR': 0.51, 'TemporalFusionTransformer': 0.49}
	Ensemble weights: {'DeepAR': 0.51, 'TemporalFusionTransformer': 0.49}
	Ensemble weights: {'DeepAR': 0.51, 'TemporalFusionTransformer': 0.49}
	-0.0270       = Validation score (-MAPE)
	-0.0270       = Validation score (-MAPE)
	-0.0270       = Validation score (-MAPE)
	-0.0270       = Validation score (-MAPE)
	-0.0270       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 7.03 s
Total runtime: 7.03 s
Total runtime: 7.03 s
Total runtime: 7.03 s
Total runtime: 7.03 s
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model score: -0.0270
Best model score: -0.0270
Best model score: -0.0270
Best model score: -0.0270
Best model score: -0.0270
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:30:14

Starting training. Start time is 2025-10-23 08:30:14

Starting training. Start time is 2025-10-23 08:30:14

Starting training. Start time is 2025-10-23 08:30:14

Starting training. Start time is 2025-10-23 08:30:14
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
	-0.0223       = Validation score (-MAPE)
	-0.0223       = Validation score (-MAPE)
	-0.0223       = Validation score (-MAPE)
	-0.0223       = Validation score (-MAPE)
	-0.0223       = Validation score (-MAPE)
	3.35    s     = Training runtime
	3.35    s     = Training runtime
	3.35    s     = Training runtime
	3.35    s     = Training runtime
	3.35    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
	-0.0325       = Validation score (-MAPE)
	-0.0325       = Validation score (-MAPE)
	-0.0325       = Validation score (-MAPE)
	-0.0325       = Validation score (-MAPE)
	-0.0325       = Validation score (-MAPE)
	3.13    s     = Training runtime
	3.13    s     = Training runtime
	3.13    s     = Training runtime
	3.13    s     = Training runtime
	3.13    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0223       = Validation score (-MAPE)
	-0.0223       = Validation score (-MAPE)
	-0.0223       = Validation score (-MAPE)
	-0.0223       = Validation score (-MAPE)
	-0.0223       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 7.03 s
Total runtime: 7.03 s
Total runtime: 7.03 s
Total runtime: 7.03 s
Total runtime: 7.03 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0223
Best model score: -0.0223
Best model score: -0.0223
Best model score: -0.0223
Best model score: -0.0223
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:30:21

Starting training. Start time is 2025-10-23 08:30:21

Starting training. Start time is 2025-10-23 08:30:21

Starting training. Start time is 2025-10-23 08:30:21

Starting training. Start time is 2025-10-23 08:30:21
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
	-0.0541       = Validation score (-MAPE)
	-0.0541       = Validation score (-MAPE)
	-0.0541       = Validation score (-MAPE)
	-0.0541       = Validation score (-MAPE)
	-0.0541       = Validation score (-MAPE)
	3.33    s     = Training runtime
	3.33    s     = Training runtime
	3.33    s     = Training runtime
	3.33    s     = Training runtime
	3.33    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
	-0.0536       = Validation score (-MAPE)
	-0.0536       = Validation score (-MAPE)
	-0.0536       = Validation score (-MAPE)
	-0.0536       = Validation score (-MAPE)
	-0.0536       = Validation score (-MAPE)
	3.15    s     = Training runtime
	3.15    s     = Training runtime
	3.15    s     = Training runtime
	3.15    s     = Training runtime
	3.15    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0536       = Validation score (-MAPE)
	-0.0536       = Validation score (-MAPE)
	-0.0536       = Validation score (-MAPE)
	-0.0536       = Validation score (-MAPE)
	-0.0536       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 7.02 s
Total runtime: 7.02 s
Total runtime: 7.02 s
Total runtime: 7.02 s
Total runtime: 7.02 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0536
Best model score: -0.0536
Best model score: -0.0536
Best model score: -0.0536
Best model score: -0.0536
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:30:28

Starting training. Start time is 2025-10-23 08:30:28

Starting training. Start time is 2025-10-23 08:30:28

Starting training. Start time is 2025-10-23 08:30:28

Starting training. Start time is 2025-10-23 08:30:28
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
	-0.0953       = Validation score (-MAPE)
	-0.0953       = Validation score (-MAPE)
	-0.0953       = Validation score (-MAPE)
	-0.0953       = Validation score (-MAPE)
	-0.0953       = Validation score (-MAPE)
	3.34    s     = Training runtime
	3.34    s     = Training runtime
	3.34    s     = Training runtime
	3.34    s     = Training runtime
	3.34    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
	-0.0950       = Validation score (-MAPE)
	-0.0950       = Validation score (-MAPE)
	-0.0950       = Validation score (-MAPE)
	-0.0950       = Validation score (-MAPE)
	-0.0950       = Validation score (-MAPE)
	3.16    s     = Training runtime
	3.16    s     = Training runtime
	3.16    s     = Training runtime
	3.16    s     = Training runtime
	3.16    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0950       = Validation score (-MAPE)
	-0.0950       = Validation score (-MAPE)
	-0.0950       = Validation score (-MAPE)
	-0.0950       = Validation score (-MAPE)
	-0.0950       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 7.08 s
Total runtime: 7.08 s
Total runtime: 7.08 s
Total runtime: 7.08 s
Total runtime: 7.08 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0950
Best model score: -0.0950
Best model score: -0.0950
Best model score: -0.0950
Best model score: -0.0950
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.42 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:30:35

Starting training. Start time is 2025-10-23 08:30:35

Starting training. Start time is 2025-10-23 08:30:35

Starting training. Start time is 2025-10-23 08:30:35

Starting training. Start time is 2025-10-23 08:30:35
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
	-0.0608       = Validation score (-MAPE)
	-0.0608       = Validation score (-MAPE)
	-0.0608       = Validation score (-MAPE)
	-0.0608       = Validation score (-MAPE)
	-0.0608       = Validation score (-MAPE)
	3.34    s     = Training runtime
	3.34    s     = Training runtime
	3.34    s     = Training runtime
	3.34    s     = Training runtime
	3.34    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	3.14    s     = Training runtime
	3.14    s     = Training runtime
	3.14    s     = Training runtime
	3.14    s     = Training runtime
	3.14    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0608       = Validation score (-MAPE)
	-0.0608       = Validation score (-MAPE)
	-0.0608       = Validation score (-MAPE)
	-0.0608       = Validation score (-MAPE)
	-0.0608       = Validation score (-MAPE)
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 7.06 s
Total runtime: 7.06 s
Total runtime: 7.06 s
Total runtime: 7.06 s
Total runtime: 7.06 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0608
Best model score: -0.0608
Best model score: -0.0608
Best model score: -0.0608
Best model score: -0.0608
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:36:07

Starting training. Start time is 2025-10-23 08:36:07

Starting training. Start time is 2025-10-23 08:36:07

Starting training. Start time is 2025-10-23 08:36:07

Starting training. Start time is 2025-10-23 08:36:07

Starting training. Start time is 2025-10-23 08:36:07
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	3.35    s     = Training runtime
	3.35    s     = Training runtime
	3.35    s     = Training runtime
	3.35    s     = Training runtime
	3.35    s     = Training runtime
	3.35    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
	-0.0354       = Validation score (-MAPE)
	-0.0354       = Validation score (-MAPE)
	-0.0354       = Validation score (-MAPE)
	-0.0354       = Validation score (-MAPE)
	-0.0354       = Validation score (-MAPE)
	-0.0354       = Validation score (-MAPE)
	3.18    s     = Training runtime
	3.18    s     = Training runtime
	3.18    s     = Training runtime
	3.18    s     = Training runtime
	3.18    s     = Training runtime
	3.18    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	-0.0273       = Validation score (-MAPE)
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 7.10 s
Total runtime: 7.10 s
Total runtime: 7.10 s
Total runtime: 7.10 s
Total runtime: 7.10 s
Total runtime: 7.10 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0273
Best model score: -0.0273
Best model score: -0.0273
Best model score: -0.0273
Best model score: -0.0273
Best model score: -0.0273
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:36:16

Starting training. Start time is 2025-10-23 08:36:16

Starting training. Start time is 2025-10-23 08:36:16

Starting training. Start time is 2025-10-23 08:36:16

Starting training. Start time is 2025-10-23 08:36:16

Starting training. Start time is 2025-10-23 08:36:16
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
	-0.0221       = Validation score (-MAPE)
	-0.0221       = Validation score (-MAPE)
	-0.0221       = Validation score (-MAPE)
	-0.0221       = Validation score (-MAPE)
	-0.0221       = Validation score (-MAPE)
	-0.0221       = Validation score (-MAPE)
	3.39    s     = Training runtime
	3.39    s     = Training runtime
	3.39    s     = Training runtime
	3.39    s     = Training runtime
	3.39    s     = Training runtime
	3.39    s     = Training runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 3.3s of the 6.5s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.5s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.5s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.5s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.5s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.5s of remaining time.
	-0.0281       = Validation score (-MAPE)
	-0.0281       = Validation score (-MAPE)
	-0.0281       = Validation score (-MAPE)
	-0.0281       = Validation score (-MAPE)
	-0.0281       = Validation score (-MAPE)
	-0.0281       = Validation score (-MAPE)
	3.13    s     = Training runtime
	3.13    s     = Training runtime
	3.13    s     = Training runtime
	3.13    s     = Training runtime
	3.13    s     = Training runtime
	3.13    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0221       = Validation score (-MAPE)
	-0.0221       = Validation score (-MAPE)
	-0.0221       = Validation score (-MAPE)
	-0.0221       = Validation score (-MAPE)
	-0.0221       = Validation score (-MAPE)
	-0.0221       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 7.10 s
Total runtime: 7.10 s
Total runtime: 7.10 s
Total runtime: 7.10 s
Total runtime: 7.10 s
Total runtime: 7.10 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0221
Best model score: -0.0221
Best model score: -0.0221
Best model score: -0.0221
Best model score: -0.0221
Best model score: -0.0221
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:36:25

Starting training. Start time is 2025-10-23 08:36:25

Starting training. Start time is 2025-10-23 08:36:25

Starting training. Start time is 2025-10-23 08:36:25

Starting training. Start time is 2025-10-23 08:36:25

Starting training. Start time is 2025-10-23 08:36:25
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
	-0.0540       = Validation score (-MAPE)
	-0.0540       = Validation score (-MAPE)
	-0.0540       = Validation score (-MAPE)
	-0.0540       = Validation score (-MAPE)
	-0.0540       = Validation score (-MAPE)
	-0.0540       = Validation score (-MAPE)
	3.33    s     = Training runtime
	3.33    s     = Training runtime
	3.33    s     = Training runtime
	3.33    s     = Training runtime
	3.33    s     = Training runtime
	3.33    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
	-0.0502       = Validation score (-MAPE)
	-0.0502       = Validation score (-MAPE)
	-0.0502       = Validation score (-MAPE)
	-0.0502       = Validation score (-MAPE)
	-0.0502       = Validation score (-MAPE)
	-0.0502       = Validation score (-MAPE)
	3.16    s     = Training runtime
	3.16    s     = Training runtime
	3.16    s     = Training runtime
	3.16    s     = Training runtime
	3.16    s     = Training runtime
	3.16    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0502       = Validation score (-MAPE)
	-0.0502       = Validation score (-MAPE)
	-0.0502       = Validation score (-MAPE)
	-0.0502       = Validation score (-MAPE)
	-0.0502       = Validation score (-MAPE)
	-0.0502       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 7.04 s
Total runtime: 7.04 s
Total runtime: 7.04 s
Total runtime: 7.04 s
Total runtime: 7.04 s
Total runtime: 7.04 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0502
Best model score: -0.0502
Best model score: -0.0502
Best model score: -0.0502
Best model score: -0.0502
Best model score: -0.0502
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:36:34

Starting training. Start time is 2025-10-23 08:36:34

Starting training. Start time is 2025-10-23 08:36:34

Starting training. Start time is 2025-10-23 08:36:34

Starting training. Start time is 2025-10-23 08:36:34

Starting training. Start time is 2025-10-23 08:36:34
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	3.32    s     = Training runtime
	3.32    s     = Training runtime
	3.32    s     = Training runtime
	3.32    s     = Training runtime
	3.32    s     = Training runtime
	3.32    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	3.14    s     = Training runtime
	3.14    s     = Training runtime
	3.14    s     = Training runtime
	3.14    s     = Training runtime
	3.14    s     = Training runtime
	3.14    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 7.01 s
Total runtime: 7.01 s
Total runtime: 7.01 s
Total runtime: 7.01 s
Total runtime: 7.01 s
Total runtime: 7.01 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0949
Best model score: -0.0949
Best model score: -0.0949
Best model score: -0.0949
Best model score: -0.0949
Best model score: -0.0949
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
Beginning AutoGluon training... Time limit = 10s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 10,
 'verbosity': 2}

Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:36:43

Starting training. Start time is 2025-10-23 08:36:43

Starting training. Start time is 2025-10-23 08:36:43

Starting training. Start time is 2025-10-23 08:36:43

Starting training. Start time is 2025-10-23 08:36:43

Starting training. Start time is 2025-10-23 08:36:43
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 3.3s of the 10.0s of remaining time.
	-0.0616       = Validation score (-MAPE)
	-0.0616       = Validation score (-MAPE)
	-0.0616       = Validation score (-MAPE)
	-0.0616       = Validation score (-MAPE)
	-0.0616       = Validation score (-MAPE)
	-0.0616       = Validation score (-MAPE)
	3.32    s     = Training runtime
	3.32    s     = Training runtime
	3.32    s     = Training runtime
	3.32    s     = Training runtime
	3.32    s     = Training runtime
	3.32    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
Training timeseries model DeepAR. Training for up to 3.3s of the 6.6s of remaining time.
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	3.17    s     = Training runtime
	3.17    s     = Training runtime
	3.17    s     = Training runtime
	3.17    s     = Training runtime
	3.17    s     = Training runtime
	3.17    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0616       = Validation score (-MAPE)
	-0.0616       = Validation score (-MAPE)
	-0.0616       = Validation score (-MAPE)
	-0.0616       = Validation score (-MAPE)
	-0.0616       = Validation score (-MAPE)
	-0.0616       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 7.04 s
Total runtime: 7.04 s
Total runtime: 7.04 s
Total runtime: 7.04 s
Total runtime: 7.04 s
Total runtime: 7.04 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0616
Best model score: -0.0616
Best model score: -0.0616
Best model score: -0.0616
Best model score: -0.0616
Best model score: -0.0616
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:37:23

Starting training. Start time is 2025-10-23 08:37:23

Starting training. Start time is 2025-10-23 08:37:23

Starting training. Start time is 2025-10-23 08:37:23

Starting training. Start time is 2025-10-23 08:37:23

Starting training. Start time is 2025-10-23 08:37:23

Starting training. Start time is 2025-10-23 08:37:23
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
	-0.0426       = Validation score (-MAPE)
	-0.0426       = Validation score (-MAPE)
	-0.0426       = Validation score (-MAPE)
	-0.0426       = Validation score (-MAPE)
	-0.0426       = Validation score (-MAPE)
	-0.0426       = Validation score (-MAPE)
	-0.0426       = Validation score (-MAPE)
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:37:28

Starting training. Start time is 2025-10-23 08:37:28

Starting training. Start time is 2025-10-23 08:37:28

Starting training. Start time is 2025-10-23 08:37:28

Starting training. Start time is 2025-10-23 08:37:28

Starting training. Start time is 2025-10-23 08:37:28

Starting training. Start time is 2025-10-23 08:37:28
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model score: -0.0292
Best model score: -0.0292
Best model score: -0.0292
Best model score: -0.0292
Best model score: -0.0292
Best model score: -0.0292
Best model score: -0.0292
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:37:32

Starting training. Start time is 2025-10-23 08:37:32

Starting training. Start time is 2025-10-23 08:37:32

Starting training. Start time is 2025-10-23 08:37:32

Starting training. Start time is 2025-10-23 08:37:32

Starting training. Start time is 2025-10-23 08:37:32

Starting training. Start time is 2025-10-23 08:37:32
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	2.38    s     = Training runtime
	2.38    s     = Training runtime
	2.38    s     = Training runtime
	2.38    s     = Training runtime
	2.38    s     = Training runtime
	2.38    s     = Training runtime
	2.38    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.8s of the 3.5s of remaining time.
Training timeseries model DeepAR. Training for up to 1.8s of the 3.5s of remaining time.
Training timeseries model DeepAR. Training for up to 1.8s of the 3.5s of remaining time.
Training timeseries model DeepAR. Training for up to 1.8s of the 3.5s of remaining time.
Training timeseries model DeepAR. Training for up to 1.8s of the 3.5s of remaining time.
Training timeseries model DeepAR. Training for up to 1.8s of the 3.5s of remaining time.
Training timeseries model DeepAR. Training for up to 1.8s of the 3.5s of remaining time.
	-0.0500       = Validation score (-MAPE)
	-0.0500       = Validation score (-MAPE)
	-0.0500       = Validation score (-MAPE)
	-0.0500       = Validation score (-MAPE)
	-0.0500       = Validation score (-MAPE)
	-0.0500       = Validation score (-MAPE)
	-0.0500       = Validation score (-MAPE)
	1.77    s     = Training runtime
	1.77    s     = Training runtime
	1.77    s     = Training runtime
	1.77    s     = Training runtime
	1.77    s     = Training runtime
	1.77    s     = Training runtime
	1.77    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0500       = Validation score (-MAPE)
	-0.0500       = Validation score (-MAPE)
	-0.0500       = Validation score (-MAPE)
	-0.0500       = Validation score (-MAPE)
	-0.0500       = Validation score (-MAPE)
	-0.0500       = Validation score (-MAPE)
	-0.0500       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.71 s
Total runtime: 4.71 s
Total runtime: 4.71 s
Total runtime: 4.71 s
Total runtime: 4.71 s
Total runtime: 4.71 s
Total runtime: 4.71 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0500
Best model score: -0.0500
Best model score: -0.0500
Best model score: -0.0500
Best model score: -0.0500
Best model score: -0.0500
Best model score: -0.0500
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:37:37

Starting training. Start time is 2025-10-23 08:37:37

Starting training. Start time is 2025-10-23 08:37:37

Starting training. Start time is 2025-10-23 08:37:37

Starting training. Start time is 2025-10-23 08:37:37

Starting training. Start time is 2025-10-23 08:37:37

Starting training. Start time is 2025-10-23 08:37:37
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.1157       = Validation score (-MAPE)
	-0.1157       = Validation score (-MAPE)
	-0.1157       = Validation score (-MAPE)
	-0.1157       = Validation score (-MAPE)
	-0.1157       = Validation score (-MAPE)
	-0.1157       = Validation score (-MAPE)
	-0.1157       = Validation score (-MAPE)
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.61 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.61 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.61 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.61 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.61 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.61 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.61 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:37:42

Starting training. Start time is 2025-10-23 08:37:42

Starting training. Start time is 2025-10-23 08:37:42

Starting training. Start time is 2025-10-23 08:37:42

Starting training. Start time is 2025-10-23 08:37:42

Starting training. Start time is 2025-10-23 08:37:42

Starting training. Start time is 2025-10-23 08:37:42
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0821       = Validation score (-MAPE)
	-0.0821       = Validation score (-MAPE)
	-0.0821       = Validation score (-MAPE)
	-0.0821       = Validation score (-MAPE)
	-0.0821       = Validation score (-MAPE)
	-0.0821       = Validation score (-MAPE)
	-0.0821       = Validation score (-MAPE)
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0821       = Validation score (-MAPE)
	-0.0821       = Validation score (-MAPE)
	-0.0821       = Validation score (-MAPE)
	-0.0821       = Validation score (-MAPE)
	-0.0821       = Validation score (-MAPE)
	-0.0821       = Validation score (-MAPE)
	-0.0821       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0821
Best model score: -0.0821
Best model score: -0.0821
Best model score: -0.0821
Best model score: -0.0821
Best model score: -0.0821
Best model score: -0.0821
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.60 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.60 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.60 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.60 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.60 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.60 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.60 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.60 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:39:23

Starting training. Start time is 2025-10-23 08:39:23

Starting training. Start time is 2025-10-23 08:39:23

Starting training. Start time is 2025-10-23 08:39:23

Starting training. Start time is 2025-10-23 08:39:23

Starting training. Start time is 2025-10-23 08:39:23

Starting training. Start time is 2025-10-23 08:39:23

Starting training. Start time is 2025-10-23 08:39:23
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0382       = Validation score (-MAPE)
	-0.0382       = Validation score (-MAPE)
	-0.0382       = Validation score (-MAPE)
	-0.0382       = Validation score (-MAPE)
	-0.0382       = Validation score (-MAPE)
	-0.0382       = Validation score (-MAPE)
	-0.0382       = Validation score (-MAPE)
	-0.0382       = Validation score (-MAPE)
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.8s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.8s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.8s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.8s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.8s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.8s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.8s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.8s of the 3.7s of remaining time.
	-0.0344       = Validation score (-MAPE)
	-0.0344       = Validation score (-MAPE)
	-0.0344       = Validation score (-MAPE)
	-0.0344       = Validation score (-MAPE)
	-0.0344       = Validation score (-MAPE)
	-0.0344       = Validation score (-MAPE)
	-0.0344       = Validation score (-MAPE)
	-0.0344       = Validation score (-MAPE)
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0344       = Validation score (-MAPE)
	-0.0344       = Validation score (-MAPE)
	-0.0344       = Validation score (-MAPE)
	-0.0344       = Validation score (-MAPE)
	-0.0344       = Validation score (-MAPE)
	-0.0344       = Validation score (-MAPE)
	-0.0344       = Validation score (-MAPE)
	-0.0344       = Validation score (-MAPE)
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.66 s
Total runtime: 4.66 s
Total runtime: 4.66 s
Total runtime: 4.66 s
Total runtime: 4.66 s
Total runtime: 4.66 s
Total runtime: 4.66 s
Total runtime: 4.66 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0344
Best model score: -0.0344
Best model score: -0.0344
Best model score: -0.0344
Best model score: -0.0344
Best model score: -0.0344
Best model score: -0.0344
Best model score: -0.0344
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.59 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.59 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.59 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.59 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.59 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.59 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.59 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.59 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:39:27

Starting training. Start time is 2025-10-23 08:39:27

Starting training. Start time is 2025-10-23 08:39:27

Starting training. Start time is 2025-10-23 08:39:27

Starting training. Start time is 2025-10-23 08:39:27

Starting training. Start time is 2025-10-23 08:39:27

Starting training. Start time is 2025-10-23 08:39:27

Starting training. Start time is 2025-10-23 08:39:27
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	Ensemble weights: {'DeepAR': 0.92, 'TemporalFusionTransformer': 0.08}
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	-0.0292       = Validation score (-MAPE)
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
	0.17    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model: WeightedEnsemble
Best model score: -0.0292
Best model score: -0.0292
Best model score: -0.0292
Best model score: -0.0292
Best model score: -0.0292
Best model score: -0.0292
Best model score: -0.0292
Best model score: -0.0292
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:39:32

Starting training. Start time is 2025-10-23 08:39:32

Starting training. Start time is 2025-10-23 08:39:32

Starting training. Start time is 2025-10-23 08:39:32

Starting training. Start time is 2025-10-23 08:39:32

Starting training. Start time is 2025-10-23 08:39:32

Starting training. Start time is 2025-10-23 08:39:32

Starting training. Start time is 2025-10-23 08:39:32
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0578       = Validation score (-MAPE)
	-0.0578       = Validation score (-MAPE)
	-0.0578       = Validation score (-MAPE)
	-0.0578       = Validation score (-MAPE)
	-0.0578       = Validation score (-MAPE)
	-0.0578       = Validation score (-MAPE)
	-0.0578       = Validation score (-MAPE)
	-0.0578       = Validation score (-MAPE)
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0578       = Validation score (-MAPE)
	-0.0578       = Validation score (-MAPE)
	-0.0578       = Validation score (-MAPE)
	-0.0578       = Validation score (-MAPE)
	-0.0578       = Validation score (-MAPE)
	-0.0578       = Validation score (-MAPE)
	-0.0578       = Validation score (-MAPE)
	-0.0578       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0578
Best model score: -0.0578
Best model score: -0.0578
Best model score: -0.0578
Best model score: -0.0578
Best model score: -0.0578
Best model score: -0.0578
Best model score: -0.0578
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:39:37

Starting training. Start time is 2025-10-23 08:39:37

Starting training. Start time is 2025-10-23 08:39:37

Starting training. Start time is 2025-10-23 08:39:37

Starting training. Start time is 2025-10-23 08:39:37

Starting training. Start time is 2025-10-23 08:39:37

Starting training. Start time is 2025-10-23 08:39:37

Starting training. Start time is 2025-10-23 08:39:37
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	2.12    s     = Training runtime
	2.12    s     = Training runtime
	2.12    s     = Training runtime
	2.12    s     = Training runtime
	2.12    s     = Training runtime
	2.12    s     = Training runtime
	2.12    s     = Training runtime
	2.12    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	1.93    s     = Training runtime
	1.93    s     = Training runtime
	1.93    s     = Training runtime
	1.93    s     = Training runtime
	1.93    s     = Training runtime
	1.93    s     = Training runtime
	1.93    s     = Training runtime
	1.93    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:39:42

Starting training. Start time is 2025-10-23 08:39:42

Starting training. Start time is 2025-10-23 08:39:42

Starting training. Start time is 2025-10-23 08:39:42

Starting training. Start time is 2025-10-23 08:39:42

Starting training. Start time is 2025-10-23 08:39:42

Starting training. Start time is 2025-10-23 08:39:42

Starting training. Start time is 2025-10-23 08:39:42
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	2.11    s     = Training runtime
	2.11    s     = Training runtime
	2.11    s     = Training runtime
	2.11    s     = Training runtime
	2.11    s     = Training runtime
	2.11    s     = Training runtime
	2.11    s     = Training runtime
	2.11    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	-0.0822       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.56 s
Total runtime: 4.56 s
Total runtime: 4.56 s
Total runtime: 4.56 s
Total runtime: 4.56 s
Total runtime: 4.56 s
Total runtime: 4.56 s
Total runtime: 4.56 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0822
Best model score: -0.0822
Best model score: -0.0822
Best model score: -0.0822
Best model score: -0.0822
Best model score: -0.0822
Best model score: -0.0822
Best model score: -0.0822
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:46:30

Starting training. Start time is 2025-10-23 08:46:30

Starting training. Start time is 2025-10-23 08:46:30

Starting training. Start time is 2025-10-23 08:46:30

Starting training. Start time is 2025-10-23 08:46:30

Starting training. Start time is 2025-10-23 08:46:30

Starting training. Start time is 2025-10-23 08:46:30

Starting training. Start time is 2025-10-23 08:46:30

Starting training. Start time is 2025-10-23 08:46:30
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0363       = Validation score (-MAPE)
	-0.0363       = Validation score (-MAPE)
	-0.0363       = Validation score (-MAPE)
	-0.0363       = Validation score (-MAPE)
	-0.0363       = Validation score (-MAPE)
	-0.0363       = Validation score (-MAPE)
	-0.0363       = Validation score (-MAPE)
	-0.0363       = Validation score (-MAPE)
	-0.0363       = Validation score (-MAPE)
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	-0.0349       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0349
Best model score: -0.0349
Best model score: -0.0349
Best model score: -0.0349
Best model score: -0.0349
Best model score: -0.0349
Best model score: -0.0349
Best model score: -0.0349
Best model score: -0.0349
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:46:36

Starting training. Start time is 2025-10-23 08:46:36

Starting training. Start time is 2025-10-23 08:46:36

Starting training. Start time is 2025-10-23 08:46:36

Starting training. Start time is 2025-10-23 08:46:36

Starting training. Start time is 2025-10-23 08:46:36

Starting training. Start time is 2025-10-23 08:46:36

Starting training. Start time is 2025-10-23 08:46:36

Starting training. Start time is 2025-10-23 08:46:36
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0288       = Validation score (-MAPE)
	-0.0288       = Validation score (-MAPE)
	-0.0288       = Validation score (-MAPE)
	-0.0288       = Validation score (-MAPE)
	-0.0288       = Validation score (-MAPE)
	-0.0288       = Validation score (-MAPE)
	-0.0288       = Validation score (-MAPE)
	-0.0288       = Validation score (-MAPE)
	-0.0288       = Validation score (-MAPE)
	2.45    s     = Training runtime
	2.45    s     = Training runtime
	2.45    s     = Training runtime
	2.45    s     = Training runtime
	2.45    s     = Training runtime
	2.45    s     = Training runtime
	2.45    s     = Training runtime
	2.45    s     = Training runtime
	2.45    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.7s of the 3.5s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.5s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.5s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.5s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.5s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.5s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.5s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.5s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.5s of remaining time.
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	1.75    s     = Training runtime
	1.75    s     = Training runtime
	1.75    s     = Training runtime
	1.75    s     = Training runtime
	1.75    s     = Training runtime
	1.75    s     = Training runtime
	1.75    s     = Training runtime
	1.75    s     = Training runtime
	1.75    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	-0.0196       = Validation score (-MAPE)
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0196
Best model score: -0.0196
Best model score: -0.0196
Best model score: -0.0196
Best model score: -0.0196
Best model score: -0.0196
Best model score: -0.0196
Best model score: -0.0196
Best model score: -0.0196
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:46:43

Starting training. Start time is 2025-10-23 08:46:43

Starting training. Start time is 2025-10-23 08:46:43

Starting training. Start time is 2025-10-23 08:46:43

Starting training. Start time is 2025-10-23 08:46:43

Starting training. Start time is 2025-10-23 08:46:43

Starting training. Start time is 2025-10-23 08:46:43

Starting training. Start time is 2025-10-23 08:46:43

Starting training. Start time is 2025-10-23 08:46:43
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0621       = Validation score (-MAPE)
	-0.0621       = Validation score (-MAPE)
	-0.0621       = Validation score (-MAPE)
	-0.0621       = Validation score (-MAPE)
	-0.0621       = Validation score (-MAPE)
	-0.0621       = Validation score (-MAPE)
	-0.0621       = Validation score (-MAPE)
	-0.0621       = Validation score (-MAPE)
	-0.0621       = Validation score (-MAPE)
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	1.92    s     = Training runtime
	1.92    s     = Training runtime
	1.92    s     = Training runtime
	1.92    s     = Training runtime
	1.92    s     = Training runtime
	1.92    s     = Training runtime
	1.92    s     = Training runtime
	1.92    s     = Training runtime
	1.92    s     = Training runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
	0.16    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.66 s
Total runtime: 4.66 s
Total runtime: 4.66 s
Total runtime: 4.66 s
Total runtime: 4.66 s
Total runtime: 4.66 s
Total runtime: 4.66 s
Total runtime: 4.66 s
Total runtime: 4.66 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:46:50

Starting training. Start time is 2025-10-23 08:46:50

Starting training. Start time is 2025-10-23 08:46:50

Starting training. Start time is 2025-10-23 08:46:50

Starting training. Start time is 2025-10-23 08:46:50

Starting training. Start time is 2025-10-23 08:46:50

Starting training. Start time is 2025-10-23 08:46:50

Starting training. Start time is 2025-10-23 08:46:50

Starting training. Start time is 2025-10-23 08:46:50
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	2.15    s     = Training runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	-0.0951       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.59 s
Total runtime: 4.59 s
Total runtime: 4.59 s
Total runtime: 4.59 s
Total runtime: 4.59 s
Total runtime: 4.59 s
Total runtime: 4.59 s
Total runtime: 4.59 s
Total runtime: 4.59 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Best model score: -0.0951
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:46:56

Starting training. Start time is 2025-10-23 08:46:56

Starting training. Start time is 2025-10-23 08:46:56

Starting training. Start time is 2025-10-23 08:46:56

Starting training. Start time is 2025-10-23 08:46:56

Starting training. Start time is 2025-10-23 08:46:56

Starting training. Start time is 2025-10-23 08:46:56

Starting training. Start time is 2025-10-23 08:46:56

Starting training. Start time is 2025-10-23 08:46:56
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Total runtime: 4.60 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:51:08

Starting training. Start time is 2025-10-23 08:51:08

Starting training. Start time is 2025-10-23 08:51:08

Starting training. Start time is 2025-10-23 08:51:08

Starting training. Start time is 2025-10-23 08:51:08

Starting training. Start time is 2025-10-23 08:51:08

Starting training. Start time is 2025-10-23 08:51:08

Starting training. Start time is 2025-10-23 08:51:08

Starting training. Start time is 2025-10-23 08:51:08

Starting training. Start time is 2025-10-23 08:51:08
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	2.46    s     = Training runtime
	2.46    s     = Training runtime
	2.46    s     = Training runtime
	2.46    s     = Training runtime
	2.46    s     = Training runtime
	2.46    s     = Training runtime
	2.46    s     = Training runtime
	2.46    s     = Training runtime
	2.46    s     = Training runtime
	2.46    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.7s of the 3.4s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.4s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.4s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.4s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.4s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.4s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.4s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.4s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.4s of remaining time.
Training timeseries model DeepAR. Training for up to 1.7s of the 3.4s of remaining time.
	-0.0436       = Validation score (-MAPE)
	-0.0436       = Validation score (-MAPE)
	-0.0436       = Validation score (-MAPE)
	-0.0436       = Validation score (-MAPE)
	-0.0436       = Validation score (-MAPE)
	-0.0436       = Validation score (-MAPE)
	-0.0436       = Validation score (-MAPE)
	-0.0436       = Validation score (-MAPE)
	-0.0436       = Validation score (-MAPE)
	-0.0436       = Validation score (-MAPE)
	1.74    s     = Training runtime
	1.74    s     = Training runtime
	1.74    s     = Training runtime
	1.74    s     = Training runtime
	1.74    s     = Training runtime
	1.74    s     = Training runtime
	1.74    s     = Training runtime
	1.74    s     = Training runtime
	1.74    s     = Training runtime
	1.74    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Total runtime: 4.77 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.57 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:51:15

Starting training. Start time is 2025-10-23 08:51:15

Starting training. Start time is 2025-10-23 08:51:15

Starting training. Start time is 2025-10-23 08:51:15

Starting training. Start time is 2025-10-23 08:51:15

Starting training. Start time is 2025-10-23 08:51:15

Starting training. Start time is 2025-10-23 08:51:15

Starting training. Start time is 2025-10-23 08:51:15

Starting training. Start time is 2025-10-23 08:51:15

Starting training. Start time is 2025-10-23 08:51:15
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.37 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:51:21

Starting training. Start time is 2025-10-23 08:51:21

Starting training. Start time is 2025-10-23 08:51:21

Starting training. Start time is 2025-10-23 08:51:21

Starting training. Start time is 2025-10-23 08:51:21

Starting training. Start time is 2025-10-23 08:51:21

Starting training. Start time is 2025-10-23 08:51:21

Starting training. Start time is 2025-10-23 08:51:21

Starting training. Start time is 2025-10-23 08:51:21

Starting training. Start time is 2025-10-23 08:51:21
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	-0.0472       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Best model score: -0.0472
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:51:28

Starting training. Start time is 2025-10-23 08:51:28

Starting training. Start time is 2025-10-23 08:51:28

Starting training. Start time is 2025-10-23 08:51:28

Starting training. Start time is 2025-10-23 08:51:28

Starting training. Start time is 2025-10-23 08:51:28

Starting training. Start time is 2025-10-23 08:51:28

Starting training. Start time is 2025-10-23 08:51:28

Starting training. Start time is 2025-10-23 08:51:28

Starting training. Start time is 2025-10-23 08:51:28
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	-0.0948       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Total runtime: 4.64 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0948
Best model score: -0.0948
Best model score: -0.0948
Best model score: -0.0948
Best model score: -0.0948
Best model score: -0.0948
Best model score: -0.0948
Best model score: -0.0948
Best model score: -0.0948
Best model score: -0.0948
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.58 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.40 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:51:34

Starting training. Start time is 2025-10-23 08:51:34

Starting training. Start time is 2025-10-23 08:51:34

Starting training. Start time is 2025-10-23 08:51:34

Starting training. Start time is 2025-10-23 08:51:34

Starting training. Start time is 2025-10-23 08:51:34

Starting training. Start time is 2025-10-23 08:51:34

Starting training. Start time is 2025-10-23 08:51:34

Starting training. Start time is 2025-10-23 08:51:34

Starting training. Start time is 2025-10-23 08:51:34
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	1.89    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	-0.0826       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0826
Best model score: -0.0826
Best model score: -0.0826
Best model score: -0.0826
Best model score: -0.0826
Best model score: -0.0826
Best model score: -0.0826
Best model score: -0.0826
Best model score: -0.0826
Best model score: -0.0826
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:57:51

Starting training. Start time is 2025-10-23 08:57:51

Starting training. Start time is 2025-10-23 08:57:51

Starting training. Start time is 2025-10-23 08:57:51

Starting training. Start time is 2025-10-23 08:57:51

Starting training. Start time is 2025-10-23 08:57:51

Starting training. Start time is 2025-10-23 08:57:51

Starting training. Start time is 2025-10-23 08:57:51

Starting training. Start time is 2025-10-23 08:57:51

Starting training. Start time is 2025-10-23 08:57:51

Starting training. Start time is 2025-10-23 08:57:51
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	2.20    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	1.85    s     = Training runtime
	1.85    s     = Training runtime
	1.85    s     = Training runtime
	1.85    s     = Training runtime
	1.85    s     = Training runtime
	1.85    s     = Training runtime
	1.85    s     = Training runtime
	1.85    s     = Training runtime
	1.85    s     = Training runtime
	1.85    s     = Training runtime
	1.85    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	-0.0287       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0287
Best model score: -0.0287
Best model score: -0.0287
Best model score: -0.0287
Best model score: -0.0287
Best model score: -0.0287
Best model score: -0.0287
Best model score: -0.0287
Best model score: -0.0287
Best model score: -0.0287
Best model score: -0.0287
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.56 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.39 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:57:58

Starting training. Start time is 2025-10-23 08:57:58

Starting training. Start time is 2025-10-23 08:57:58

Starting training. Start time is 2025-10-23 08:57:58

Starting training. Start time is 2025-10-23 08:57:58

Starting training. Start time is 2025-10-23 08:57:58

Starting training. Start time is 2025-10-23 08:57:58

Starting training. Start time is 2025-10-23 08:57:58

Starting training. Start time is 2025-10-23 08:57:58

Starting training. Start time is 2025-10-23 08:57:58

Starting training. Start time is 2025-10-23 08:57:58
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	-0.0299       = Validation score (-MAPE)
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	-0.0271       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0271
Best model score: -0.0271
Best model score: -0.0271
Best model score: -0.0271
Best model score: -0.0271
Best model score: -0.0271
Best model score: -0.0271
Best model score: -0.0271
Best model score: -0.0271
Best model score: -0.0271
Best model score: -0.0271
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.53 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.53 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.53 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.53 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.53 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.53 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.53 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.53 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.53 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.53 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.53 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.38 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:58:04

Starting training. Start time is 2025-10-23 08:58:04

Starting training. Start time is 2025-10-23 08:58:04

Starting training. Start time is 2025-10-23 08:58:04

Starting training. Start time is 2025-10-23 08:58:04

Starting training. Start time is 2025-10-23 08:58:04

Starting training. Start time is 2025-10-23 08:58:04

Starting training. Start time is 2025-10-23 08:58:04

Starting training. Start time is 2025-10-23 08:58:04

Starting training. Start time is 2025-10-23 08:58:04

Starting training. Start time is 2025-10-23 08:58:04
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	-0.0633       = Validation score (-MAPE)
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	-0.0586       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0586
Best model score: -0.0586
Best model score: -0.0586
Best model score: -0.0586
Best model score: -0.0586
Best model score: -0.0586
Best model score: -0.0586
Best model score: -0.0586
Best model score: -0.0586
Best model score: -0.0586
Best model score: -0.0586
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.36 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:58:11

Starting training. Start time is 2025-10-23 08:58:11

Starting training. Start time is 2025-10-23 08:58:11

Starting training. Start time is 2025-10-23 08:58:11

Starting training. Start time is 2025-10-23 08:58:11

Starting training. Start time is 2025-10-23 08:58:11

Starting training. Start time is 2025-10-23 08:58:11

Starting training. Start time is 2025-10-23 08:58:11

Starting training. Start time is 2025-10-23 08:58:11

Starting training. Start time is 2025-10-23 08:58:11

Starting training. Start time is 2025-10-23 08:58:11
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	-0.1121       = Validation score (-MAPE)
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	-0.0949       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Total runtime: 4.57 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0949
Best model score: -0.0949
Best model score: -0.0949
Best model score: -0.0949
Best model score: -0.0949
Best model score: -0.0949
Best model score: -0.0949
Best model score: -0.0949
Best model score: -0.0949
Best model score: -0.0949
Best model score: -0.0949
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25324.41 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 08:58:18

Starting training. Start time is 2025-10-23 08:58:18

Starting training. Start time is 2025-10-23 08:58:18

Starting training. Start time is 2025-10-23 08:58:18

Starting training. Start time is 2025-10-23 08:58:18

Starting training. Start time is 2025-10-23 08:58:18

Starting training. Start time is 2025-10-23 08:58:18

Starting training. Start time is 2025-10-23 08:58:18

Starting training. Start time is 2025-10-23 08:58:18

Starting training. Start time is 2025-10-23 08:58:18

Starting training. Start time is 2025-10-23 08:58:18
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0899       = Validation score (-MAPE)
	-0.0899       = Validation score (-MAPE)
	-0.0899       = Validation score (-MAPE)
	-0.0899       = Validation score (-MAPE)
	-0.0899       = Validation score (-MAPE)
	-0.0899       = Validation score (-MAPE)
	-0.0899       = Validation score (-MAPE)
	-0.0899       = Validation score (-MAPE)
	-0.0899       = Validation score (-MAPE)
	-0.0899       = Validation score (-MAPE)
	-0.0899       = Validation score (-MAPE)
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	-0.0823       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0823
Best model score: -0.0823
Best model score: -0.0823
Best model score: -0.0823
Best model score: -0.0823
Best model score: -0.0823
Best model score: -0.0823
Best model score: -0.0823
Best model score: -0.0823
Best model score: -0.0823
Best model score: -0.0823
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.54 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 
Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 09:09:28

Starting training. Start time is 2025-10-23 09:09:28

Starting training. Start time is 2025-10-23 09:09:28

Starting training. Start time is 2025-10-23 09:09:28

Starting training. Start time is 2025-10-23 09:09:28

Starting training. Start time is 2025-10-23 09:09:28

Starting training. Start time is 2025-10-23 09:09:28

Starting training. Start time is 2025-10-23 09:09:28

Starting training. Start time is 2025-10-23 09:09:28

Starting training. Start time is 2025-10-23 09:09:28

Starting training. Start time is 2025-10-23 09:09:28

Starting training. Start time is 2025-10-23 09:09:28
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	2.17    s     = Training runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0486       = Validation score (-MAPE)
	-0.0486       = Validation score (-MAPE)
	-0.0486       = Validation score (-MAPE)
	-0.0486       = Validation score (-MAPE)
	-0.0486       = Validation score (-MAPE)
	-0.0486       = Validation score (-MAPE)
	-0.0486       = Validation score (-MAPE)
	-0.0486       = Validation score (-MAPE)
	-0.0486       = Validation score (-MAPE)
	-0.0486       = Validation score (-MAPE)
	-0.0486       = Validation score (-MAPE)
	-0.0486       = Validation score (-MAPE)
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	-0.0372       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Best model score: -0.0372
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.56 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.56 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.56 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.56 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.56 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.56 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.56 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.56 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.56 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.56 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.56 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.56 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 
Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 09:09:35

Starting training. Start time is 2025-10-23 09:09:35

Starting training. Start time is 2025-10-23 09:09:35

Starting training. Start time is 2025-10-23 09:09:35

Starting training. Start time is 2025-10-23 09:09:35

Starting training. Start time is 2025-10-23 09:09:35

Starting training. Start time is 2025-10-23 09:09:35

Starting training. Start time is 2025-10-23 09:09:35

Starting training. Start time is 2025-10-23 09:09:35

Starting training. Start time is 2025-10-23 09:09:35

Starting training. Start time is 2025-10-23 09:09:35

Starting training. Start time is 2025-10-23 09:09:35
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	-0.0343       = Validation score (-MAPE)
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	1.88    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	-0.0309       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Best model score: -0.0309
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.55 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.55 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.55 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.55 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.55 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.55 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.55 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.55 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.55 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.55 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.55 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.55 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 
Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 09:09:41

Starting training. Start time is 2025-10-23 09:09:41

Starting training. Start time is 2025-10-23 09:09:41

Starting training. Start time is 2025-10-23 09:09:41

Starting training. Start time is 2025-10-23 09:09:41

Starting training. Start time is 2025-10-23 09:09:41

Starting training. Start time is 2025-10-23 09:09:41

Starting training. Start time is 2025-10-23 09:09:41

Starting training. Start time is 2025-10-23 09:09:41

Starting training. Start time is 2025-10-23 09:09:41

Starting training. Start time is 2025-10-23 09:09:41

Starting training. Start time is 2025-10-23 09:09:41
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	-0.0645       = Validation score (-MAPE)
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	2.14    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	1.90    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	-0.0591       = Validation score (-MAPE)
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.34    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Total runtime: 4.63 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0591
Best model score: -0.0591
Best model score: -0.0591
Best model score: -0.0591
Best model score: -0.0591
Best model score: -0.0591
Best model score: -0.0591
Best model score: -0.0591
Best model score: -0.0591
Best model score: -0.0591
Best model score: -0.0591
Best model score: -0.0591
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.58 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.58 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.58 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.58 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.58 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.58 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.58 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.58 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.58 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.58 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.58 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.58 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 
Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 09:09:48

Starting training. Start time is 2025-10-23 09:09:48

Starting training. Start time is 2025-10-23 09:09:48

Starting training. Start time is 2025-10-23 09:09:48

Starting training. Start time is 2025-10-23 09:09:48

Starting training. Start time is 2025-10-23 09:09:48

Starting training. Start time is 2025-10-23 09:09:48

Starting training. Start time is 2025-10-23 09:09:48

Starting training. Start time is 2025-10-23 09:09:48

Starting training. Start time is 2025-10-23 09:09:48

Starting training. Start time is 2025-10-23 09:09:48

Starting training. Start time is 2025-10-23 09:09:48
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	-0.1104       = Validation score (-MAPE)
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	2.19    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	-0.0954       = Validation score (-MAPE)
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.35    s     = Training runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
	0.15    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.65 s
Total runtime: 4.65 s
Total runtime: 4.65 s
Total runtime: 4.65 s
Total runtime: 4.65 s
Total runtime: 4.65 s
Total runtime: 4.65 s
Total runtime: 4.65 s
Total runtime: 4.65 s
Total runtime: 4.65 s
Total runtime: 4.65 s
Total runtime: 4.65 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0954
Best model score: -0.0954
Best model score: -0.0954
Best model score: -0.0954
Best model score: -0.0954
Best model score: -0.0954
Best model score: -0.0954
Best model score: -0.0954
Best model score: -0.0954
Best model score: -0.0954
Best model score: -0.0954
Best model score: -0.0954
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25322.57 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 
Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 09:09:55

Starting training. Start time is 2025-10-23 09:09:55

Starting training. Start time is 2025-10-23 09:09:55

Starting training. Start time is 2025-10-23 09:09:55

Starting training. Start time is 2025-10-23 09:09:55

Starting training. Start time is 2025-10-23 09:09:55

Starting training. Start time is 2025-10-23 09:09:55

Starting training. Start time is 2025-10-23 09:09:55

Starting training. Start time is 2025-10-23 09:09:55

Starting training. Start time is 2025-10-23 09:09:55

Starting training. Start time is 2025-10-23 09:09:55

Starting training. Start time is 2025-10-23 09:09:55
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	-0.0869       = Validation score (-MAPE)
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	1.87    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	-0.0814       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Total runtime: 4.62 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Best model score: -0.0814
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25319.02 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25319.02 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25319.02 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25319.02 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25319.02 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25319.02 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25319.02 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25319.02 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25319.02 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25319.02 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25319.02 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.55 GB / 125.17 GB (90.7%)
Disk Space Avail:   25319.02 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 09:18:31

Starting training. Start time is 2025-10-23 09:18:31

Starting training. Start time is 2025-10-23 09:18:31

Starting training. Start time is 2025-10-23 09:18:31

Starting training. Start time is 2025-10-23 09:18:31

Starting training. Start time is 2025-10-23 09:18:31

Starting training. Start time is 2025-10-23 09:18:31

Starting training. Start time is 2025-10-23 09:18:31

Starting training. Start time is 2025-10-23 09:18:31

Starting training. Start time is 2025-10-23 09:18:31

Starting training. Start time is 2025-10-23 09:18:31

Starting training. Start time is 2025-10-23 09:18:31
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0561       = Validation score (-MAPE)
	-0.0561       = Validation score (-MAPE)
	-0.0561       = Validation score (-MAPE)
	-0.0561       = Validation score (-MAPE)
	-0.0561       = Validation score (-MAPE)
	-0.0561       = Validation score (-MAPE)
	-0.0561       = Validation score (-MAPE)
	-0.0561       = Validation score (-MAPE)
	-0.0561       = Validation score (-MAPE)
	-0.0561       = Validation score (-MAPE)
	-0.0561       = Validation score (-MAPE)
	-0.0561       = Validation score (-MAPE)
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	2.16    s     = Training runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	Ensemble weights: {'DeepAR': 1.0}
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	-0.0537       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.32    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Total runtime: 4.58 s
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model: DeepAR
Best model score: -0.0537
Best model score: -0.0537
Best model score: -0.0537
Best model score: -0.0537
Best model score: -0.0537
Best model score: -0.0537
Best model score: -0.0537
Best model score: -0.0537
Best model score: -0.0537
Best model score: -0.0537
Best model score: -0.0537
Best model score: -0.0537
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model"
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model"
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.49 GB / 125.17 GB (90.7%)
Disk Space Avail:   25314.12 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.49 GB / 125.17 GB (90.7%)
Disk Space Avail:   25314.12 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.49 GB / 125.17 GB (90.7%)
Disk Space Avail:   25314.12 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.49 GB / 125.17 GB (90.7%)
Disk Space Avail:   25314.12 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.49 GB / 125.17 GB (90.7%)
Disk Space Avail:   25314.12 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.49 GB / 125.17 GB (90.7%)
Disk Space Avail:   25314.12 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.49 GB / 125.17 GB (90.7%)
Disk Space Avail:   25314.12 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.49 GB / 125.17 GB (90.7%)
Disk Space Avail:   25314.12 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.49 GB / 125.17 GB (90.7%)
Disk Space Avail:   25314.12 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.49 GB / 125.17 GB (90.7%)
Disk Space Avail:   25314.12 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.49 GB / 125.17 GB (90.7%)
Disk Space Avail:   25314.12 GB / 249006.62 GB (10.2%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.49 GB / 125.17 GB (90.7%)
Disk Space Avail:   25314.12 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 
Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-10-23 09:26:48

Starting training. Start time is 2025-10-23 09:26:48

Starting training. Start time is 2025-10-23 09:26:48

Starting training. Start time is 2025-10-23 09:26:48

Starting training. Start time is 2025-10-23 09:26:48

Starting training. Start time is 2025-10-23 09:26:48

Starting training. Start time is 2025-10-23 09:26:48

Starting training. Start time is 2025-10-23 09:26:48

Starting training. Start time is 2025-10-23 09:26:48

Starting training. Start time is 2025-10-23 09:26:48

Starting training. Start time is 2025-10-23 09:26:48

Starting training. Start time is 2025-10-23 09:26:48
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	2.18    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0538       = Validation score (-MAPE)
	-0.0538       = Validation score (-MAPE)
	-0.0538       = Validation score (-MAPE)
	-0.0538       = Validation score (-MAPE)
	-0.0538       = Validation score (-MAPE)
	-0.0538       = Validation score (-MAPE)
	-0.0538       = Validation score (-MAPE)
	-0.0538       = Validation score (-MAPE)
	-0.0538       = Validation score (-MAPE)
	-0.0538       = Validation score (-MAPE)
	-0.0538       = Validation score (-MAPE)
	-0.0538       = Validation score (-MAPE)
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	1.86    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	-0.0497       = Validation score (-MAPE)
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.33    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
	0.04    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.61 s
Total runtime: 4.61 s
Total runtime: 4.61 s
Total runtime: 4.61 s
Total runtime: 4.61 s
Total runtime: 4.61 s
Total runtime: 4.61 s
Total runtime: 4.61 s
Total runtime: 4.61 s
Total runtime: 4.61 s
Total runtime: 4.61 s
Total runtime: 4.61 s
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model: TemporalFusionTransformer
Best model score: -0.0497
Best model score: -0.0497
Best model score: -0.0497
Best model score: -0.0497
Best model score: -0.0497
Best model score: -0.0497
Best model score: -0.0497
Best model score: -0.0497
Best model score: -0.0497
Best model score: -0.0497
Best model score: -0.0497
Best model score: -0.0497
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       114.00 GB / 125.17 GB (91.1%)
Disk Space Avail:   25313.85 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 09:32:16
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 1.5s of the 4.4s of remaining time.
	-0.0459       = Validation score (-MAPE)
	4.66    s     = Training runtime
	0.08    s     = Validation (prediction) runtime
Stopping training due to lack of time remaining. Time left: -0.4 seconds
Not fitting ensemble due to lack of time remaining. Time left: -0.4 seconds
Training complete. Models trained: ['TemporalFusionTransformer']
Total runtime: 4.79 s
Best model: TemporalFusionTransformer
Best model score: -0.0459
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.68 GB / 125.17 GB (90.8%)
Disk Space Avail:   25313.84 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 09:32:23
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0309       = Validation score (-MAPE)
	2.21    s     = Training runtime
	0.05    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.8s of the 3.7s of remaining time.
	-0.0220       = Validation score (-MAPE)
	1.97    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	-0.0220       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.76 s
Best model: DeepAR
Best model score: -0.0220
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.64 GB / 125.17 GB (90.8%)
Disk Space Avail:   25313.88 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 09:32:29
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0621       = Validation score (-MAPE)
	2.21    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0472       = Validation score (-MAPE)
	1.85    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	-0.0472       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.61 s
Best model: DeepAR
Best model score: -0.0472
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.63 GB / 125.17 GB (90.8%)
Disk Space Avail:   25313.86 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 09:32:36
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.1157       = Validation score (-MAPE)
	2.22    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.8s of the 3.7s of remaining time.
	-0.0945       = Validation score (-MAPE)
	1.86    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	-0.0945       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.64 s
Best model: DeepAR
Best model score: -0.0945
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.62 GB / 125.17 GB (90.8%)
Disk Space Avail:   25313.84 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 09:32:43
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0869       = Validation score (-MAPE)
	2.14    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.8s of remaining time.
	-0.0826       = Validation score (-MAPE)
	1.89    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	-0.0826       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.57 s
Best model: DeepAR
Best model score: -0.0826
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model"
Beginning AutoGluon training... Time limit = 6s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #167~18.04.1-Ubuntu SMP Wed May 24 00:51:42 UTC 2023
CPU Count:          40
GPU Count:          0
Memory Avail:       113.61 GB / 125.17 GB (90.8%)
Disk Space Avail:   25313.87 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'DeepAR': {}, 'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6,
 'verbosity': 2}

Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 09:32:50
Models that will be trained: ['TemporalFusionTransformer', 'DeepAR']
Training timeseries model TemporalFusionTransformer. Training for up to 2.0s of the 6.0s of remaining time.
	-0.0528       = Validation score (-MAPE)
	2.17    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1.9s of the 3.7s of remaining time.
	-0.0486       = Validation score (-MAPE)
	1.86    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	-0.0486       = Validation score (-MAPE)
	0.32    s     = Training runtime
	0.14    s     = Validation (prediction) runtime
Training complete. Models trained: ['TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 4.58 s
Best model: DeepAR
Best model score: -0.0486
Beginning AutoGluon training... Time limit = 1800s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2021_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #147~18.04.1-Ubuntu SMP Sat Oct 15 13:10:18 UTC 2022
CPU Count:          32
GPU Count:          1
Memory Avail:       173.93 GB / 188.59 GB (92.2%)
Disk Space Avail:   25310.46 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'Chronos': {},
                     'DeepAR': {},
                     'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 1800,
 'verbosity': 2}

Provided train_data has 3744 rows, 9 time series. Median time series length is 416 (min=416, max=416). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 09:43:49
Models that will be trained: ['Chronos[autogluon__chronos-t5-small]', 'TemporalFusionTransformer', 'DeepAR']
Training timeseries model Chronos[autogluon__chronos-t5-small]. Training for up to 449.5s of the 1798.0s of remaining time.
	-0.0185       = Validation score (-MAPE)
	0.01    s     = Training runtime
	11.98   s     = Validation (prediction) runtime
Training timeseries model TemporalFusionTransformer. Training for up to 595.3s of the 1785.9s of remaining time.
	-0.0237       = Validation score (-MAPE)
	55.01   s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1130.8s of the 1730.8s of remaining time.
	-0.0152       = Validation score (-MAPE)
	72.76   s     = Training runtime
	0.12    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'Chronos[autogluon__chronos-t5-small]': 0.01, 'DeepAR': 0.81, 'TemporalFusionTransformer': 0.18}
	-0.0148       = Validation score (-MAPE)
	0.56    s     = Training runtime
	12.14   s     = Validation (prediction) runtime
Training complete. Models trained: ['Chronos[autogluon__chronos-t5-small]', 'TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 140.63 s
Best model: WeightedEnsemble
Best model score: -0.0148
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models"
Beginning AutoGluon training... Time limit = 1800s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2022_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #147~18.04.1-Ubuntu SMP Sat Oct 15 13:10:18 UTC 2022
CPU Count:          32
GPU Count:          1
Memory Avail:       171.13 GB / 188.59 GB (90.7%)
Disk Space Avail:   25310.41 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'Chronos': {},
                     'DeepAR': {},
                     'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 1800,
 'verbosity': 2}

Provided train_data has 3852 rows, 9 time series. Median time series length is 428 (min=428, max=428). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 09:46:12
Models that will be trained: ['Chronos[autogluon__chronos-t5-small]', 'TemporalFusionTransformer', 'DeepAR']
Training timeseries model Chronos[autogluon__chronos-t5-small]. Training for up to 450.0s of the 1800.0s of remaining time.
	-0.0146       = Validation score (-MAPE)
	0.01    s     = Training runtime
	1.06    s     = Validation (prediction) runtime
Training timeseries model TemporalFusionTransformer. Training for up to 599.6s of the 1798.9s of remaining time.
	-0.0164       = Validation score (-MAPE)
	66.08   s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1132.7s of the 1732.7s of remaining time.
	-0.0147       = Validation score (-MAPE)
	73.17   s     = Training runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'Chronos[autogluon__chronos-t5-small]': 0.42, 'DeepAR': 0.48, 'TemporalFusionTransformer': 0.1}
	-0.0133       = Validation score (-MAPE)
	0.55    s     = Training runtime
	1.23    s     = Validation (prediction) runtime
Training complete. Models trained: ['Chronos[autogluon__chronos-t5-small]', 'TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 141.15 s
Best model: WeightedEnsemble
Best model score: -0.0133
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models"
Beginning AutoGluon training... Time limit = 1800s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2023_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #147~18.04.1-Ubuntu SMP Sat Oct 15 13:10:18 UTC 2022
CPU Count:          32
GPU Count:          1
Memory Avail:       171.07 GB / 188.59 GB (90.7%)
Disk Space Avail:   25316.41 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'Chronos': {},
                     'DeepAR': {},
                     'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 1800,
 'verbosity': 2}

Provided train_data has 3960 rows, 9 time series. Median time series length is 440 (min=440, max=440). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 09:48:36
Models that will be trained: ['Chronos[autogluon__chronos-t5-small]', 'TemporalFusionTransformer', 'DeepAR']
Training timeseries model Chronos[autogluon__chronos-t5-small]. Training for up to 450.0s of the 1800.0s of remaining time.
	-0.0424       = Validation score (-MAPE)
	0.01    s     = Training runtime
	1.07    s     = Validation (prediction) runtime
Training timeseries model TemporalFusionTransformer. Training for up to 599.6s of the 1798.9s of remaining time.
	-0.0339       = Validation score (-MAPE)
	61.96   s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1136.8s of the 1736.8s of remaining time.
	-0.0251       = Validation score (-MAPE)
	72.55   s     = Training runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	-0.0251       = Validation score (-MAPE)
	0.55    s     = Training runtime
	0.13    s     = Validation (prediction) runtime
Training complete. Models trained: ['Chronos[autogluon__chronos-t5-small]', 'TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 136.42 s
Best model: DeepAR
Best model score: -0.0251
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models"
Beginning AutoGluon training... Time limit = 1800s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2024_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #147~18.04.1-Ubuntu SMP Sat Oct 15 13:10:18 UTC 2022
CPU Count:          32
GPU Count:          1
Memory Avail:       171.05 GB / 188.59 GB (90.7%)
Disk Space Avail:   25316.39 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'Chronos': {},
                     'DeepAR': {},
                     'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 1800,
 'verbosity': 2}

Provided train_data has 4068 rows, 9 time series. Median time series length is 452 (min=452, max=452). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 09:50:55
Models that will be trained: ['Chronos[autogluon__chronos-t5-small]', 'TemporalFusionTransformer', 'DeepAR']
Training timeseries model Chronos[autogluon__chronos-t5-small]. Training for up to 450.0s of the 1800.0s of remaining time.
	-0.0437       = Validation score (-MAPE)
	0.01    s     = Training runtime
	1.03    s     = Validation (prediction) runtime
Training timeseries model TemporalFusionTransformer. Training for up to 599.6s of the 1798.9s of remaining time.
	-0.0472       = Validation score (-MAPE)
	78.88   s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1120.0s of the 1720.0s of remaining time.
	-0.0347       = Validation score (-MAPE)
	72.38   s     = Training runtime
	0.12    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	-0.0347       = Validation score (-MAPE)
	0.55    s     = Training runtime
	0.12    s     = Validation (prediction) runtime
Training complete. Models trained: ['Chronos[autogluon__chronos-t5-small]', 'TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 153.11 s
Best model: DeepAR
Best model score: -0.0347
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models"
Beginning AutoGluon training... Time limit = 1800s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Local_Forecasts/Global_2025_models'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #147~18.04.1-Ubuntu SMP Sat Oct 15 13:10:18 UTC 2022
CPU Count:          32
GPU Count:          1
Memory Avail:       171.05 GB / 188.59 GB (90.7%)
Disk Space Avail:   25315.50 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'Chronos': {},
                     'DeepAR': {},
                     'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 1800,
 'verbosity': 2}

Provided train_data has 4176 rows, 9 time series. Median time series length is 464 (min=464, max=464). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 09:53:31
Models that will be trained: ['Chronos[autogluon__chronos-t5-small]', 'TemporalFusionTransformer', 'DeepAR']
Training timeseries model Chronos[autogluon__chronos-t5-small]. Training for up to 450.0s of the 1800.0s of remaining time.
	-0.0151       = Validation score (-MAPE)
	0.01    s     = Training runtime
	1.07    s     = Validation (prediction) runtime
Training timeseries model TemporalFusionTransformer. Training for up to 599.6s of the 1798.9s of remaining time.
	-0.0139       = Validation score (-MAPE)
	55.29   s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1143.5s of the 1743.5s of remaining time.
	-0.0233       = Validation score (-MAPE)
	72.20   s     = Training runtime
	0.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'Chronos[autogluon__chronos-t5-small]': 0.44, 'DeepAR': 0.08, 'TemporalFusionTransformer': 0.48}
	-0.0124       = Validation score (-MAPE)
	0.55    s     = Training runtime
	1.24    s     = Validation (prediction) runtime
Training complete. Models trained: ['Chronos[autogluon__chronos-t5-small]', 'TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 129.38 s
Best model: WeightedEnsemble
Best model score: -0.0124
Warning: path already exists! This predictor may overwrite an existing predictor! path="/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model"
Beginning AutoGluon training... Time limit = 1800s
AutoGluon will save models to '/h/kupfersk/cfpr_2026/generate_forecasts/output/Final_2026_Forecasts/Global_Model'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.8.20
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #147~18.04.1-Ubuntu SMP Sat Oct 15 13:10:18 UTC 2022
CPU Count:          32
GPU Count:          1
Memory Avail:       171.03 GB / 188.59 GB (90.7%)
Disk Space Avail:   25311.90 GB / 249006.62 GB (10.2%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'MS',
 'hyperparameters': {'Chronos': {},
                     'DeepAR': {},
                     'TemporalFusionTransformer': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 16,
 'quantile_levels': [0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 1800,
 'verbosity': 2}

Provided train_data has 4284 rows, 9 time series. Median time series length is 476 (min=476, max=476). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['Geopolitical_clean', 'Climate', 'Manufacturing', 'Economic']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-10-23 09:55:44
Models that will be trained: ['Chronos[autogluon__chronos-t5-small]', 'TemporalFusionTransformer', 'DeepAR']
Training timeseries model Chronos[autogluon__chronos-t5-small]. Training for up to 450.0s of the 1800.0s of remaining time.
	-0.0157       = Validation score (-MAPE)
	0.01    s     = Training runtime
	1.06    s     = Validation (prediction) runtime
Training timeseries model TemporalFusionTransformer. Training for up to 599.6s of the 1798.9s of remaining time.
	-0.0124       = Validation score (-MAPE)
	180.11  s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 1018.7s of the 1618.7s of remaining time.
	-0.0196       = Validation score (-MAPE)
	72.46   s     = Training runtime
	0.12    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'Chronos[autogluon__chronos-t5-small]': 0.24, 'DeepAR': 0.06, 'TemporalFusionTransformer': 0.7}
	-0.0109       = Validation score (-MAPE)
	0.55    s     = Training runtime
	1.22    s     = Validation (prediction) runtime
Training complete. Models trained: ['Chronos[autogluon__chronos-t5-small]', 'TemporalFusionTransformer', 'DeepAR', 'WeightedEnsemble']
Total runtime: 254.46 s
Best model: WeightedEnsemble
Best model score: -0.0109
